name: Lint and Test Golang

on:
  workflow_call:
    inputs:
      codecov:
        default: false
        required: false
        type: boolean
      usePublicRunner:
        default: false
        required: false
        type: boolean

jobs:
  lint-golang:
    runs-on: ${{ (inputs.usePublicRunner && 'ubuntu-latest') || 'self-hosted' }}
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Check out Source Code
        uses: actions/checkout@v3.1.0

      - name: Set CICD Cache Paths
        id: cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      - name: Setup CICD Cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          path: |
            ${{ steps.cache-paths.outputs.go-build }}
            ${{ steps.cache-paths.outputs.go-mod }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies
        run: go mod download

      - name: Format
        run: go fmt .

      - name: Lint
        run: |
          go install golang.org/x/lint/golint@latest
          golint -set_exit_status ./...

      - name: Errcheck
        run: |
          go install github.com/kisielk/errcheck@latest
          errcheck ./...

      - name: Test
        run: |
          go test ./...
          go test -race ./...

      - name: Measure Coverage
        if: ${{ inputs.codecov }}
        run: go test -v -covermode=atomic -coverprofile=coverage.out ./...

      - name: Upload Coverage to Codecov
        if: ${{ inputs.codecov }}
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.out
